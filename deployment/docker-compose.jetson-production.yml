version: '3.8'

services:
  # Home Assistant for Jetson Orin Nano (Production)
  home-assistant:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.jetson-production
    container_name: jetson-home-assistant
    hostname: jetson-home-assistant.local
    restart: unless-stopped
    
    # Jetson Orin Nano resource constraints
    deploy:
      resources:
        limits:
          memory: 7G        # Leave 1GB for system
          cpus: '5.5'       # Leave 0.5 cores for system
        reservations:
          memory: 1G
          cpus: '1.0'
    
    # Production environment variables
    environment:
      - NODE_ENV=production
      - JETSON_PLATFORM=nano-orin
      - JETSON_PRODUCTION=true
      - NODE_OPTIONS=--max-old-space-size=6144
      - CUDA_VISIBLE_DEVICES=0
      - TZ=America/New_York
      # Audio configuration
      - PULSE_RUNTIME_PATH=/run/pulse
      - ALSA_CARD=0
      # Security
      - SECURE_MODE=true
      - CHILD_SAFETY_STRICT=true
    
    # Port mappings
    ports:
      - "3000:3000"    # API endpoint
      - "8080:8080"    # Web interface
    
    # Volume mounts for persistence and hardware access
    volumes:
      # Application data persistence
      - jetson_app_data:/app/data
      - jetson_logs:/app/logs
      - jetson_cache:/app/cache
      - jetson_temp:/app/temp
      # Configuration (read-only)
      - ./config:/app/config:ro
      # Models (read-only)
      - ./models:/app/models:ro
      # System integration
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # Audio system access
      - /run/pulse:/run/pulse:rw
      - /dev/snd:/dev/snd:rw
      # GPU access (if needed for AI acceleration)
      - /usr/local/cuda:/usr/local/cuda:ro
    
    # Device access for Jetson hardware
    devices:
      # Audio devices
      - /dev/snd:/dev/snd
      # GPU device (for CUDA acceleration)
      - /dev/nvhost-ctrl:/dev/nvhost-ctrl
      - /dev/nvhost-ctrl-gpu:/dev/nvhost-ctrl-gpu
      - /dev/nvmap:/dev/nvmap
    
    # Capabilities for hardware access
    cap_add:
      - SYS_NICE        # For CPU priority adjustment
      - IPC_LOCK        # For memory locking
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Health check
    healthcheck:
      test: ["/app/jetson-health-production.sh"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=home-assistant,platform=jetson"
    
    # Network configuration
    networks:
      - jetson-network
    
    # Dependencies
    depends_on:
      - redis-cache
      - prometheus-monitoring

  # Redis for caching and session management
  redis-cache:
    image: redis:7-alpine
    container_name: jetson-redis
    restart: unless-stopped
    
    # Resource limits for Redis
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    
    # Redis configuration
    command: redis-server --maxmemory 200mb --maxmemory-policy allkeys-lru --save 60 1
    
    volumes:
      - jetson_redis_data:/data
    
    # Health check for Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    networks:
      - jetson-network

  # Prometheus monitoring for system metrics
  prometheus-monitoring:
    image: prom/prometheus:latest
    container_name: jetson-prometheus
    restart: unless-stopped
    
    # Resource limits for monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - jetson_prometheus_data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=7d'  # Keep 7 days of data
    
    networks:
      - jetson-network

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: jetson-node-exporter
    restart: unless-stopped
    
    # Minimal resources for metrics collection
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    
    ports:
      - "9100:9100"
    
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    
    networks:
      - jetson-network

# Persistent volumes for data
volumes:
  jetson_app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/home-assistant/data
  
  jetson_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/home-assistant/logs
  
  jetson_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/home-assistant/cache
  
  jetson_temp:
    driver: local
  
  jetson_redis_data:
    driver: local
  
  jetson_prometheus_data:
    driver: local

# Network configuration
networks:
  jetson-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16